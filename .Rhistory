geom_col(position = "stack") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
glimpse(race_rankings)
# This will save your most recent plot
ggsave(
filename = "2021_10_26_tidy_tuesday.png",
device = "png")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
gender = fct_rev(gender)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#", "#"))
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#5bdbfe", "#febdd3"))
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#5bdbfe", "#febdd3")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, TRUE, FALSE)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, TRUE, FALSE)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, 1, 0.75)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, 1, 0)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(1, 0.75)) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(legend.position = "none") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
library(ggtext)
install.packages("ggtext")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and FEMALE participation",
caption = tt_caption)
library(ggtext)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and FEMALE participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and <b style='color:#ef798a'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#ef798a'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_10_26_tidy_tuesday.png",
device = "png")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- "Source: BjnNowak-Github Repo  | Analysis: Tony Galvan (@GDataScience1)"
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- "Source: BjnNowak-Github Repo  | Analysis: Tony Galvan (@GDataScience1)"
#tt <- tt_load("2021-10-26")
#tt <- tt_load(2021, week = 44)
ultra_rankings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv')
race <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv')
#tt
#tt %>%
#  map(glimpse)
race_rankings <- ultra_rankings %>%
left_join(race, by = "race_year_id") %>%
mutate(year = lubridate::year(date))
glimpse(race_rankings)
library(ggtext)
race_rankings %>%
filter(!is.na(gender)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
count(runner) %>%
top_n(5, wt = n) %>%
left_join(race_rankings, by = "runner") %>%
count(year, runner) %>%
#mutate(runner = fct_reorder(runner, -n)) %>%
ggplot(aes(year, n, color = runner)) +
geom_smooth(method = "loess", se = FALSE)
race_rankings %>%
count(runner, wt = distance, sort = TRUE) %>%
top_n(5, wt = n) %>%
left_join(race_rankings, by = "runner") %>%
count(year, runner, wt = distance) %>%
#mutate(runner = fct_reorder(runner, -n)) %>%
ggplot(aes(year, n, color = runner)) +
#geom_line()
geom_smooth(method = "loess", se = FALSE)
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D"))
race_rankings <- ultra_rankings %>%
left_join(race, by = "race_year_id") %>%
mutate(year = lubridate::year(date),
speed = distance / ((time_in_seconds / 60) / 60))
glimpse(race_rankings)
race_rankings %>%
filter(!is.na(gender)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(speed > 0,
speed < 20) %>%
group_by(year, gender) %>%
summarize(mean_speed = mean(speed)) %>%
ggplot(aes(year, mean_speed, color = gender)) +
geom_line()
race_rankings %>%
filter(speed > 0,
speed < 20,
!is.na(gender)) %>%
group_by(year, gender) %>%
summarize(mean_speed = mean(speed)) %>%
ggplot(aes(year, mean_speed, color = gender)) +
geom_line()
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender),
alpha = ifelse(year == 2020, TRUE, FALSE))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1))
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender),
alpha = ifelse(year == 2020, TRUE, FALSE))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "Speed (MPH)",
title = "Ultra Trail Running Speeds",
subtitle = "2020: <b style='color:#6F8AB7'>MALES</b> finally bridged the gender gap and surpassed <b style='color:#FF674D'>FEMALES</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender),
alpha = ifelse(year == 2020, TRUE, FALSE))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "Speed (MPH)",
title = "Ultra Trail Running Speeds",
subtitle = "2020: <b style='color:#6F8AB7'>MALES</b> finally bridged the gender gap and surpassed <b style='color:#FF674D'>FEMALES</b>",
caption = tt_caption)
race_rankings %>%
filter(!is.na(distance),
distance > 0,
!is.na(time_in_seconds),
time_in_seconds > 0,
!is.na(gender)) %>%
mutate(speed = distance / ((time_in_seconds / 60) / 60)) %>%
filter(speed <= 20) %>%
ggplot(aes(factor(year), speed, fill = gender, group = paste0(year,gender),
alpha = ifelse(year == 2020, TRUE, FALSE))) +
geom_violin(position = "dodge", draw_quantiles = 0.5,
scale = "area", trim = TRUE, adjust = 0.75) +
scale_y_continuous(labels = comma_format()) +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "Speed (MPH)",
title = "Ultra Trail Running Speeds",
subtitle = "2020: <b style='color:#6F8AB7'>MALES</b> finally bridged the gender gap and had a higher mean speed than <b style='color:#FF674D'>FEMALES</b>",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_10_26_tidy_tuesday.png",
device = "png")
