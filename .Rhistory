# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- "Source: waterpointdata.org  |  Analysis: Tony Galvan (@GDataScience1)"
# Chunk 2: Load
tt <- tt_load("2021-05-04")
# Chunk 3: Readme
tt
# Chunk 4: Glimpse
tt %>%
map(glimpse)
# Chunk 5: Wrangle
water <- tt$water
# Chunk 6: Visualize
water %>%
count(facility_type) %>%
mutate(facility_type = fct_reorder(facility_type, n)) %>%
ggplot(aes(n, facility_type, fill = facility_type)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = comma) +
labs(x = "# of water sources",
y = "",
title = "Water Sources - Facility Types",
subtitle = "Filtered to African sources",
caption = tt_caption)
# Chunk 7
# This will save your most recent plot
ggsave(
filename = "2021_05_04_tidy_tuesday.png",
device = "png")
View(water)
water %>%
count(water_source) %>%
mutate(water_source = fct_reorder(water_source, n)) %>%
ggplot(aes(n, water_source, fill = water_source)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = comma) +
labs(x = "# of water sources",
y = "",
title = "Water Sources",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
count(country_name, sort = TRUE)
water %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = comma) +
labs(x = "# of water sources",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = comma) +
labs(x = "# of water sources",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log 10 scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(0, country_name, label = n)) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n)) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 5) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 5) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 1) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.25) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.5) +
scale_x_log10(labels = comma) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.5) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.5) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.3) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.4) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_05_04_tidy_tuesday.png",
device = "png", width = 4, height = 8)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.5) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_05_04_tidy_tuesday.png",
device = "png", width = 4, height = 12)
water %>%
filter(!is.na(country_name)) %>%
count(country_name) %>%
mutate(country_name = fct_reorder(country_name, n)) %>%
ggplot(aes(n, country_name, fill = country_name)) +
geom_col(show.legend = FALSE) +
geom_text(aes(1, country_name, label = n), nudge_x = 0.6) +
scale_x_log10(labels = comma) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
labs(x = "# of water sources (log scale)",
y = "",
title = "Water Sources by Country",
subtitle = "Filtered to African sources",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_05_04_tidy_tuesday.png",
device = "png", width = 4, height = 12)
# This will save your most recent plot
ggsave(
filename = "2021_05_04_tidy_tuesday.png",
device = "png", width = 4, height = 8)
