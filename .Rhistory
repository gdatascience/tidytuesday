setwd("~/rstats")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(statsr)
install.packages("statsr")
# Chunk 1
library(tidyverse)
library(statsr)
# Chunk 2: bandit
bandit_sim()
# Chunk 3
bandit_posterior(data = data.frame(machine = 1, outcome = "W"))
# Chunk 4
bandit_posterior(data = data.frame(machine = c(1,1), outcome = c("W","L")))
# Chunk 5
# Initiate the two plays on Machine 1
data1 <- data.frame(machine = c(1), outcome = c("W"))
data2 <- data.frame(machine = c(1), outcome = c("L"))
# Use piping and bandit_posterior to calculuate the posterior probabilities after each play
bandit_posterior(data1) %>%
bandit_posterior(data2, prior = .)
# Chunk 6: Q4
# Type your code for Question 4 here
# Chunk 7: Q5
# Type your code for Question 5 here
# Chunk 8: E3
# Type your code for Exercise 3 here
# Chunk 9: E4
# Type your code for Exercise 4 here
# Chunk 10: E5
# Type your code for Exercise 5 here
# Chunk 11
# Store play results for each Machine into `data`
data <- data.frame(machine = c(rep(1, 20), rep(2, 20)),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
# Calculate posterior probabilities after each play and plot the result
plot_bandit_posterior(data)
# Chunk 12: E6
# Type your code for Exercise 6 here
bandit_sim()
# Chunk 1
library(tidyverse)
library(statsr)
# Chunk 2: bandit
bandit_sim()
# Chunk 3
bandit_posterior(data = data.frame(machine = 1, outcome = "W"))
# Chunk 4
bandit_posterior(data = data.frame(machine = c(1,1), outcome = c("W","L")))
# Chunk 5
# Initiate the two plays on Machine 1
data1 <- data.frame(machine = c(1), outcome = c("W"))
data2 <- data.frame(machine = c(1), outcome = c("L"))
# Use piping and bandit_posterior to calculuate the posterior probabilities after each play
bandit_posterior(data1) %>%
bandit_posterior(data2, prior = .)
# Chunk 6: Q4
# Type your code for Question 4 here
# Chunk 7: Q5
# Type your code for Question 5 here
# Chunk 8: E3
# Type your code for Exercise 3 here
# Chunk 9: E4
# Type your code for Exercise 4 here
# Chunk 10: E5
# Type your code for Exercise 5 here
# Chunk 11
# Store play results for each Machine into `data`
data <- data.frame(machine = c(rep(1, 20), rep(2, 20)),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
# Calculate posterior probabilities after each play and plot the result
plot_bandit_posterior(data)
# Chunk 12: E6
# Type your code for Exercise 6 here
# Type your code for Question 4 here
bandit_posterior(data = data.frame(machine = c(1,1,2,2,2), outcome = c("W","W","W","W","L")))
# Type your code for Question 5 here
bandit_posterior(data = data.frame(machine = c(2,2,2,1,1), outcome = c("W","W","L","W","W")))
# Type your code for Exercise 3 here
bandit_posterior(data = data.frame(machine = c(2,2,2), outcome = c("W","W","L"))) %>%
bandit_posterior(data = data.frame(machine = c(1,1), outcome = c("W","W")))
# Chunk 1
library(tidyverse)
library(statsr)
# Chunk 2: bandit
bandit_sim()
# Chunk 3
bandit_posterior(data = data.frame(machine = 1, outcome = "W"))
# Chunk 4
bandit_posterior(data = data.frame(machine = c(1,1), outcome = c("W","L")))
# Chunk 5
# Initiate the two plays on Machine 1
data1 <- data.frame(machine = c(1), outcome = c("W"))
data2 <- data.frame(machine = c(1), outcome = c("L"))
# Use piping and bandit_posterior to calculuate the posterior probabilities after each play
bandit_posterior(data1) %>%
bandit_posterior(data2, prior = .)
# Chunk 6: Q4
# Type your code for Question 4 here
bandit_posterior(data = data.frame(machine = c(1,1,2,2,2), outcome = c("W","W","W","W","L")))
# Chunk 7: Q5
# Type your code for Question 5 here
bandit_posterior(data = data.frame(machine = c(2,2,2,1,1), outcome = c("W","W","L","W","W")))
# Chunk 8: E3
# Type your code for Exercise 3 here
bandit_posterior(data = data.frame(machine = c(2,2,2), outcome = c("W","W","L"))) %>%
bandit_posterior(data = data.frame(machine = c(1,1), outcome = c("W","W")))
# Chunk 9: E4
# Type your code for Exercise 4 here
# Chunk 10: E5
# Type your code for Exercise 5 here
# Chunk 11
# Store play results for each Machine into `data`
data <- data.frame(machine = c(rep(1, 20), rep(2, 20)),
outcome = c("L", "W", "W", "W", "L", "L", "L", "W", "W", "L",
"L", "W", "W", "W", "W", "L", "W", "L", "L", "L",
"W", "L", "L", "W", "L", "L", "L", "W", "L", "W",
"L", "L", "W", "L", "L", "L", "W", "W", "L", "W"))
# Calculate posterior probabilities after each play and plot the result
plot_bandit_posterior(data)
# Chunk 12: E6
# Type your code for Exercise 6 here
# Type your code for Exercise 4 here
data = data.frame(machine = c(1L, 1L, 1L, 1L, 1L, 2L, 2L, 2L, 2L, 2L), outcome = c("W", "L", "L", "L", "W", "L", "L", "L", "W", "L"))
bandit_posterior(data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
files <- list.files(pattern = ".*.sql") %>%
tibble() %>%
rename(file_name = 1) %>%
mutate(sql_code = sapply(., FUN = read_file(file = file_name)))
files <- list.files(pattern = ".*.sql") %>%
tibble() %>%
rename(file_name = 1)
setwd("~/sql")
files <- list.files(pattern = ".*.sql") %>%
tibble() %>%
rename(file_name = 1)
files
list.files(pattern = ".*.sql")
files <- list.files(pattern = "*.sql") #%>%
ls
list.files
gwd
pwd
getwd()
files <- list.files(path = ".",
pattern = "\\.sql$",
full.names = TRUE) #%>%
files
setwd("~/sql")
files <- list.files(path = ".",
pattern = "\\.sql$",
full.names = TRUE) #%>%
#tibble() %>%
#rename(file_name = 1)
files
files <- list.files(path = ".",
pattern = "*.sql",
full.names = TRUE) #%>%
files
files <- list.files(path = "./sql",
pattern = "*.sql",
full.names = TRUE) #%>%
#tibble() %>%
#rename(file_name = 1)
files
setwd("~/")
files <- list.files(path = "./sql",
pattern = "*.sql",
full.names = TRUE) #%>%
#tibble() %>%
#rename(file_name = 1)
files
files <- list.files(path = "./sql",
recursive = TRUE,
pattern = "*.sql",
full.names = TRUE) #%>%
files
files <- list.files(path = "sql",
recursive = TRUE,
pattern = "*.sql",
full.names = TRUE) #%>%
files
list.files(pattern = ".*.sql")
setwd("~/sql")
list.files(pattern = ".*.sql")
list.files(pattern = ".*.sql")
list.files(pattern = "*.sql")
getwd()
setwd("~/")
readtext::readtext("sql/*.sql")
list.files()
list.files(path = "./sql")
list.files(path = "./sql",
pattern = "*.sql")
list.files(path = "././sql",
pattern = "*.sql")
list.files(path = "././sql",
pattern = ".*.sql")
list.files(path = "./sql") #,
#pattern = ".*.sql")
list.files(path = "./sql") #,
setwd("~/")
list.files(path = "./sql") #,
#pattern = ".*.sql")
list.files(path = "./sql")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(tidytuesdayR)
theme_set(theme_light())
library(ggmap)
map.world <- map_data("world")
View(map.world)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(tidytuesdayR)
theme_set(theme_light())
tt <- tt_load("2021-03-23")
un_votes <- tt$unvotes %>%
left_join(tt$roll_calls, by = "rcid") %>%
left_join(tt$issues, by = "rcid")
un_votes
un_votes %>%
filter(country != "Zanzibar") %>%
group_by(country) %>%
summarize(n = n(),
vote_yes = sum(ifelse(vote == "yes", 1, 0)),
pct_yes_vote = vote_yes / n) %>%
top_n(10, -pct_yes_vote) %>%
mutate(country = fct_reorder(country, -pct_yes_vote)) %>%
ggplot(aes(pct_yes_vote, country, fill = ifelse(country == "United States", "US", "Other"))) +
geom_col(show.legend = FALSE)
library(ggmap)
map.world <- map_data("world")
map.world_joined <- left_join(map.world, un_votes, by = c('region' = 'country'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
library(lubridate)
theme_set(theme_light())
tt <- tt_load("2021-03-16")
tt
tt %>%
map(glimpse)
games <- tt$games %>%
#filter(!year %in% c(2012, 2021)) %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)),
gamename = str_to_title(gamename))
glimpse(games)
summary(games$date)
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line() +
ggtitle("Number of unique games played by date")
games %>%
count(gamename, sort = TRUE)
games %>%
filter(gamename == "Doki Doki Literature Club") %>%
ggplot(aes(date, avg)) +
geom_line()
tidytuesdayR::use_tidytemplate()
setwd("~/GitHub/tidytuesday")
tidytuesdayR::use_tidytemplate()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt <- tt_load("2021-04-13")
tt
tt %>%
map(glimpse)
post_offices <- tt$post_offices
post_offices
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point()
post_offices %>% filter(longitude > 0)
post_offices <- tt$post_offices %>%
mutate(longitude = ifelse(longitude > 0, -longitude, longitude))
post_offices
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point()
tt_caption <- 'Blevins, Cameron; Helbock, Richard W., 2021, "US Post Offices", https://doi.org/10.7910/DVN/NUKCNA, Harvard Dataverse, V1, UNF:6:8ROmiI5/4qA8jHrt62PpyA== [fileUNF]'
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(caption = tt_caption)
post_offices %>%
ggplot(aes(longitude, latitude, color = established)) +
geom_point() +
labs(caption = tt_caption)
library(gganimate)
install.packages("gifski")
