#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = seed_mother), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 3),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = pollinator_father), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 2),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = pollinator_father), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 1),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = pollinator_father), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 2),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = pollinator_father), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 2),
state_prov = fct_lump(state_prov, 3),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = state_prov), alpha = 0.1, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
pumpkins %>%
filter(type == "Long Gourd") %>%
mutate(country = fct_lump(country, 1),
gpc_site = fct_lump(gpc_site, 2),
seed_mother = fct_lump(seed_mother, 2),
pollinator_father = fct_lump(pollinator_father, 2),
state_prov = fct_lump(state_prov, 3),
place = ifelse(place %in% c(seq(1:100)), "top", "other")) %>%
ggplot(aes(factor(year), weight_lbs)) +
geom_violin() +
#geom_boxplot(outlier.shape = NA) +
geom_jitter(aes(color = state_prov), alpha = 0.25, width = 0.15) +
scale_y_log10() +
facet_wrap(~country)
tidytuesdayR::use_tidytemplate()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- "Source: TBD  | Analysis: Tony Galvan (@GDataScience1)"
tt <- tt_load("2021-10-26")
tt_caption <- "Source: BjnNowak-Github Repo  | Analysis: Tony Galvan (@GDataScience1)"
#tt <- tt_load("2021-10-26")
tt <- tt_load(2021, week = 44)
ultra_rankings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv')
ultra_rankings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/ultra_rankings.csv')
race <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-26/race.csv')
ultra_rankings %>%
glimpse()
ultra_rankings %>%
left_join(race, by = "race_year_id") %>%
glimpse()
race_rankings <- ultra_rankings %>%
left_join(race, by = "race_year_id")
race_rankings %>%
glimpse()
race_rankings %>%
ggplot(aes(distance, time_in_seconds, color = gender)) +
geom_point()
race_rankings %>%
glimpse()
race_rankings %>%
mutate(gt_195 = ifelse(distance >= 195, TRUE, FALSE)) %>%
ggplot(aes(gt_195, time_in_seconds, color = gender)) +
geom_point()
race_rankings %>% glimpse()
race_rankings %>% #glimpse()
#mutate(gt_195 = ifelse(distance >= 195, TRUE, FALSE)) %>%
ggplot(aes(time_in_seconds)) +
geom_histogram()
race_rankings %>% #glimpse()
#mutate(gt_195 = ifelse(distance >= 195, TRUE, FALSE)) %>%
ggplot(aes(distance)) +
geom_histogram()
race_rankings %>%
count(distance, sort = TRUE)
race_rankings %>%
count(distance)
race_rankings %>%
count(distance) %>%
View()
race_rankings %>%
glimpse()
race_rankings %>%
mutate(year = year(date)) %>%
glimpse()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
glimpse()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year) %>%
ggplot(aes(year, n)) +
geom_line()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year) %>%
ggplot(aes(year, n)) +
geom_col()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year) %>%
ggplot(aes(year, n, fill = gender)) +
geom_col()
race_rankings %>%
mutate(year = lubridate::year(date)) %>% glimpse()
race_rankings %>%
mutate(year = lubridate::year(date))
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(year, n, fill = gender)) +
geom_col()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col()
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge")
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "stack")
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "fill")
race_rankings %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "stack")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "stack")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "stack") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
glimpse(race_rankings)
# This will save your most recent plot
ggsave(
filename = "2021_10_26_tidy_tuesday.png",
device = "png")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
gender = fct_rev(gender)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#", "#"))
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#5bdbfe", "#febdd3"))
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#5bdbfe", "#febdd3")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, TRUE, FALSE)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, TRUE, FALSE)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, 1, 0.75)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date),
covid = ifelse(year >= 2020, 1, 0)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = covid)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender, covid) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(1, 0.75)) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(legend.position = "none") +
labs(x = "",
y = "# of participants",
fill = "Gender",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted participation",
caption = tt_caption)
library(ggtext)
install.packages("ggtext")
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and FEMALE participation",
caption = tt_caption)
library(ggtext)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and FEMALE participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#7d82b8", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#7d82b8'>MALE</b> and <b style='color:#ef798a'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#ef798a")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#ef798a'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.75, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
race_rankings %>%
filter(!is.na(gender)) %>%
mutate(year = lubridate::year(date)) %>%
count(year, gender) %>%
ggplot(aes(factor(year), n, fill = gender, alpha = ifelse(year >= 2020, TRUE, FALSE))) +
geom_col(position = "dodge") +
scale_fill_manual(values = c("#6F8AB7", "#FF674D")) +
scale_alpha_manual(values = c(0.65, 1)) +
theme(plot.subtitle = element_markdown(lineheight = 1.1),
legend.position = "none") +
labs(x = "",
y = "# of participants",
title = "Ultra Trail Running",
subtitle = "2020 - 2021: COVID impacted both <b style='color:#6F8AB7'>MALE</b> and <b style='color:#FF674D'>FEMALE</b> participation",
caption = tt_caption)
# This will save your most recent plot
ggsave(
filename = "2021_10_26_tidy_tuesday.png",
device = "png")
