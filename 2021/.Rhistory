ggplot(aes(n)) +
geom_histogram()
library(ggtext)
un_votes %>%
group_by(country) %>%
summarize(n = n(),
vote_yes = sum(ifelse(vote == "yes", 1, 0)),
pct_yes_vote = vote_yes / n) %>%
ungroup() %>%
filter(n >= 3) %>%
top_n(10, -pct_yes_vote) %>%
mutate(country = fct_reorder(country, -pct_yes_vote),
fill = ifelse(country == "United States", "US", "Other")) %>%
ggplot(aes(pct_yes_vote, country, fill = fill)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = percent) +
scale_fill_manual(values = c("gray75", "#3C3B6E")) +
theme(plot.title = element_markdown(lineheight = 1.1)) +
labs(x = "% 'YES' votes",
y = "",
title = "**10 UN Countries with the lowest percentage of 'YES' votes**<br>
<span style='font-size:12pt'>The <span style='color:#3C3B6E;'>**United States**</span> has the lowest percentage of 'YES' votes</span>",
caption = "Source: Harvard Dataverse  |  Analysis: Tony Galvan (@GDataScience1)")
un_votes %>%
count(country, issue) %>%
ggplot(aes(n)) +
geom_histogram() +
facet_wrap(~issue, scale = "free")
library(tidytext)
un_votes %>%
filter(!is.na(issue)) %>%
group_by(country, issue) %>%
summarize(n = n(),
vote_yes = sum(ifelse(vote == "yes", 1, 0)),
pct_yes_vote = vote_yes / n) %>%
ungroup() %>%
filter(n >= 250) %>%
group_by(issue) %>%
top_n(10, wt = -pct_yes_vote) %>%
ungroup() %>%
mutate(fill = ifelse(country == "United States", "US", "Other"),
country = reorder_within(country, -pct_yes_vote, issue)) %>%
ggplot(aes(pct_yes_vote, country, fill = fill)) +
geom_col(show.legend = FALSE) +
scale_x_continuous(labels = percent) +
scale_fill_manual(values = c("gray75", "#3C3B6E")) +
theme(plot.title = element_markdown(lineheight = 1.1)) +
scale_y_reordered() +
facet_wrap(~issue, scale = "free_y") +
labs(x = "% 'YES' votes",
y = "",
title = "**10 UN Countries with the lowest percentage of 'YES' votes by issue**<br>
<span style='font-size:12pt'>The <span style='color:#3C3B6E;'>**United States**</span> has the lowest in 4 out of the 6 issues</span>",
caption = "Source: Harvard Dataverse  |  Analysis: Tony Galvan (@GDataScience1)")
un_votes %>%
group_by(issue, year = )
#library(ggmap)
#map.world <- map_data("world")
#map.world_joined <- left_join(map.world, un_votes, by = c('region' = 'country'))
library(fuzzyjoin)
map_data("world") %>%
as_tibble() %>%
filter(region != "Antarctica") %>%
regex_left_join(un_votes %>%
group_by(country, country_code) %>%
summarize(n = n(),
vote_yes = sum(ifelse(vote == "yes", 1, 0)),
pct_yes_vote = vote_yes / n) %>%
inner_join(as_tibble(maps::iso3166),
by = c("country_code" = "a2")),
by = c("region" = "mapname")) %>%
ggplot(aes(long, lat, group = group, fill = pct_yes_vote)) +
geom_polygon() +
scale_fill_gradient2(low = "dark blue",
high = "orange",
mid = "grey",
midpoint = 0.65) +
#coord_fixed(2) +
ggthemes::theme_map() +
labs(fill = "% 'YES' votes",
title = "UN countries: percent of 'YES' votes",
caption = "Source: Harvard Dataverse  |  Analysis: Tony Galvan (@GDataScience1)")
# This will save your most recent plot
#ggsave(
#  filename = "2021_03_23_tidy_tuesday.png",
#  width = 10,
#  device = "png")
View(unvotes)
tidytuesdayR::use_tidytemplate()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(tidytuesdayR)
theme_set(theme_light())
tt <- tt_load("2021-03-30")
tt
tt %>%
map(glimpse)
tt$allCategories
tt$allCategories %>%
separate_rows(categories, sep = ",")
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
View()
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " "))
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", ""))
count(category)
count(categories)
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories)
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
ggplot(aes(n)) +
geom_histogram()
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories)
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
ggplot(aes(n, categories)) +
geom_col()
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n))
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories)) +
geom_col()
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories, fill = categories)) +
geom_col()
tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories, fill = categories)) +
geom_col(show.legend = FALSE)
all_categories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories, fill = categories)) +
geom_col(show.legend = FALSE)
all_categories <- tt$allCategories
all_categories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", "")) %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories, fill = categories)) +
geom_col(show.legend = FALSE)
all_categories_unnested <- tt$allCategories %>%
separate_rows(categories, sep = ",") %>%
mutate(categories = str_replace(categories, " ", ""))
all_categories_unnested  %>%
count(categories) %>%
mutate(categories = fct_reorder(categories, n)) %>%
ggplot(aes(n, categories, fill = categories)) +
geom_col(show.legend = FALSE)
all_categories_unnested %>%
View()
all_categories_unnested %>%
View() %>%
count(hex)
all_categories_unnested %>%
count(hex)
all_categories_unnested %>%
count(hex, sort = TRUE)
tt$allCategories %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n)
tt$allCategories %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup()
tt$allCategories %>%
group_by(brand, product) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup()
tt$allCategories %>%
distict(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
inner_join(tt$allCategories, by = "brand")
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
inner_join(tt$allCategories, by = "brand") %>%
ggplot(aes(lightness, brands)) +
geom_boxplot()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
inner_join(tt$allCategories, by = "brand") %>%
ggplot(aes(lightness, brand)) +
geom_boxplot()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
mutate(brand = fct_reorder(brand, lightness))
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
mutate(brand = fct_reorder(brand, lightness)) %>%
inner_join(tt$allCategories, by = "brand") %>%
ggplot(aes(lightness, brand)) +
geom_boxplot()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
inner_join(tt$allCategories, by = "brand") %>%
mutate(brand = fct_reorder(brand, lightness)) %>%
ggplot(aes(lightness, brand)) +
geom_boxplot()
tt$allCategories %>%
distinct(brand, product) %>%
group_by(brand) %>%
summarize(n = n()) %>%
top_n(10, n) %>%
ungroup() %>%
inner_join(tt$allCategories, by = "brand") %>%
mutate(brand = fct_reorder(brand, lightness)) %>%
ggplot(aes(lightness, brand, fill = brand)) +
geom_boxplot(show.legend = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt %>%
map(glimpse)
tt <- tt_load("2021-04-06")
tt
tt %>%
map(glimpse)
forest <- tt$forest
View(forest)
world_forest <- forest %>%
filter(entity == "World")
View(world_forest)
View(world_forest)
forest %>%
inner_join(world_forest, by = "year") %>%
View()
View(world_forest)
forest %>%
inner_join(world_forest %>%
select(year, nfc_world = net_forest_conversion),
by = "year") %>%
View()
forest %>%
inner_join(world_forest %>%
select(year, nfc_world = net_forest_conversion),
by = "year") %>%
mutate(pct_nfc = net_forest_conversion / nfc_world)
forest %>%
inner_join(world_forest %>%
select(year, nfc_world = net_forest_conversion),
by = "year") %>%
mutate(pct_nfc = net_forest_conversion / nfc_world) %>%
View()
forest <- tt$forest %>%
filter(entity != "World")
world_forest <- tt$forest %>%
filter(entity == "World")
forest %>%
inner_join(world_forest %>%
select(year, nfc_world = net_forest_conversion),
by = "year") %>%
mutate(pct_nfc = net_forest_conversion / nfc_world) %>%
View()
pct_forest <- forest %>%
inner_join(world_forest %>%
select(year, nfc_world = net_forest_conversion),
by = "year") %>%
mutate(pct_nfc = net_forest_conversion / nfc_world)
pct_forest %>%
group_by(entity) %>%
filter(pct_nfc == max(pct_nfc))
pct_forest %>%
group_by(entity) %>%
filter(pct_nfc == max(pct_nfc)) %>%
top_n(10, pct_nfc)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- 'Blevins, Cameron; Helbock, Richard W., 2021, "US Post Offices", https://doi.org/10.7910/DVN/NUKCNA, Harvard Dataverse, V1, UNF:6:8ROmiI5/4qA8jHrt62PpyA== [fileUNF]'
tt
tt <- tt_load("2021-04-13")
tt
tt %>%
map(glimpse)
post_offices <- tt$post_offices %>%
mutate(longitude = ifelse(longitude > 0, -longitude, longitude))
post_offices
#install.packages("gifski")
library(gganimate)
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(caption = tt_caption) +
transition_time(established) +
coord_sf() +
theme_void()
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
#labs(caption = tt_caption) +
transition_time(established) +
coord_sf() +
theme_void()
post_offices %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
#labs(caption = tt_caption) +
transition_time(established) +
#coord_sf() +
theme_void()
post_offices %>%
filter(!is.na(established)) %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
#labs(caption = tt_caption) +
transition_time(established) +
#coord_sf() +
theme_void()
post_offices %>%
filter(!is.na(established)) %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(title = "US Post Offices Establised Since {frame_time}", caption = tt_caption) +
transition_time(established) +
#coord_sf() +
theme_void()
post_offices %>% ggplot(aes(established)) + geom_histogram
post_offices %>% ggplot(aes(established)) + geom_histogram()
post_offices %>% count(established)
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(title = "US Post Offices Establised Since {frame_time}", caption = tt_caption) +
transition_time(established) +
#coord_sf() +
theme_void()
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(title = "US Post Offices Establised in {frame_time}", caption = tt_caption) +
transition_time(established) +
#coord_sf() +
theme_void()
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
ggplot(aes(longitude, latitude)) +
geom_point() +
labs(title = "US Post Offices Establised in {frame_time}",
caption = tt_caption) +
transition_time(established) +
coord_fixed() +
theme_void()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
forest <- tt$forest %>%
filter(entity != "World")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- 'Blevins, Cameron; Helbock, Richard W., 2021, "US Post Offices", https://doi.org/10.7910/DVN/NUKCNA, Harvard Dataverse, V1, UNF:6:8ROmiI5/4qA8jHrt62PpyA== [fileUNF]'
View(post_offices)
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(active_year = list(seq(established_year, expired_year, by = “years”))) %>%
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(active_year = list(seq(established, discontinued, by = “years”)))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(active_year = list(seq(established, discontinued, by = "years")))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
group_by(id) %>%
mutate(active_year = list(seq(established, discontinued, by = "years")))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
group_by(id) %>%
mutate(active_year = list(seq(established, discontinued, by = 1)))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
group_by(id) %>%
mutate(active_year = list(seq(established, discontinued, by = "year")))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(discontinued = ifelse(is.na(discontinued), 2021, discontinued)) %>%
group_by(id) %>%
mutate(active_year = list(seq(established, discontinued, by = "year")))
post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(discontinued = ifelse(is.na(discontinued), 2021, discontinued)) %>%
group_by(id) %>%
mutate(active_year = list(seq(established, discontinued, by = 1)))
post_offices %>%
group_by(state) %>%
summarize(first_est = min(established))
post_offices %>%
group_by(state) %>%
summarize(first_est = min(established)) %>%
arrange(desc(first_est))
post_offices <- tt$post_offices %>%
mutate(longitude = ifelse(longitude > 0, -longitude, longitude)
state = ifelse(state == "VAy", "VA", state))
post_offices <- tt$post_offices %>%
mutate(longitude = ifelse(longitude > 0, -longitude, longitude),
state = ifelse(state == "VAy", "VA", state))
post_offices
post_offices %>%
group_by(state) %>%
summarize(first_est = min(established)) %>%
arrange(desc(first_est))
post_offices %>%
group_by(state) %>%
summarize(first_est = min(established)) %>%
arrange(first_est)
post_offices <- tt$post_offices %>%
filter(!is.na(established),
established > 1600) %>%
mutate(longitude = ifelse(longitude > 0, -longitude, longitude),
state = ifelse(state == "VAy", "VA", state))
post_offices
post_offices %>%
group_by(state) %>%
summarize(first_est = min(established)) %>%
arrange(first_est)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt_caption <- 'Blevins, Cameron; Helbock, Richard W., 2021, "US Post Offices", https://doi.org/10.7910/DVN/NUKCNA, Harvard Dataverse, V1, UNF:6:8ROmiI5/4qA8jHrt62PpyA== [fileUNF]'
