filter(avg == max(avg))
games <- tt$games %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(month, 1, year))
games <- tt$games %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)))
glimpse(games)
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(10, avg)
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(10, avg)
top_ten_games
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(10, avg) %>%
select(gamename)
top_ten_games
games <- tt$games %>%
filter(!year %in% c(2012, 2021)) %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)))
glimpse(games)
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(10, avg) %>%
select(gamename)
games %>%
top_ten_games
games %>%
inner_join(top_ten_games, by = "gamename")
games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) %>%
geom_line()
games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line()
games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10()
games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma)
p1 <- games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma)
p1
p1 +
facet_wrap(~gamename)
p1 +
facet_wrap(~gamename) +
theme(legend.position = "none")
top_ten_games
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>% arrange(desc(avg))
games <- tt$games %>%
#filter(!year %in% c(2012, 2021)) %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)))
glimpse(games)
# Visualize
Using your processed dataset, create your unique visualization.
```{r Visualize}
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>% arrange(desc(avg))
top_n(10, avg) %>%
select(gamename)
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>% arrange(desc(avg))
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(10, avg) %>%
select(gamename)
p1 <- games %>%
inner_join(top_ten_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma)
p1
p1 +
facet_wrap(~gamename) +
theme(legend.position = "none")
top_ten_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename)
top_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename)
p1 <- games %>%
inner_join(top_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma)
p1
p1 +
facet_wrap(~gamename) +
theme(legend.position = "none")
p1 <- games %>%
inner_join(top_games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line()
p1
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) +
theme(legend.position = "none")
p1 +
#scale_y_log10(labels = comma) +
facet_wrap(~gamename) +
theme(legend.position = "none")
p1 +
#scale_y_log10(labels = comma) +
facet_wrap(~gamename, scales = "free") +
theme(legend.position = "none")
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename, scales = "free") +
theme(legend.position = "none")
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
p1 <- games %>%
inner_join(top_games, by = "gamename") %>%
mutate(gamename = str_to_title(gamename)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line()
p1
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
library(lubridate)
theme_set(theme_light())
tt <- tt_load("2021-03-16")
tt
tt %>%
map(glimpse)
games <- tt$games %>%
#filter(!year %in% c(2012, 2021)) %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)))
glimpse(games)
top_games <- games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename)
p1 <- games %>%
inner_join(top_games, by = "gamename") %>%
mutate(gamename = str_to_title(gamename)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line()
p1
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
games %>%
filter(str_detect(gamename, "Mario"))
games %>%
filter(str_detect(gamename, "Mine"))
games %>%
count(gamename, sort = TRUE)
games %>%
count(gamename, sort = TRUE) %>%
filter(n == 104)
View(games)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg)) %>%
filter(n == 104)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg)) %>%
filter(n == 104) %>%
top_n(9, wt = avg)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename")
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE) +
scale_y_log10()
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma) +
facet_wrap(~gamename)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
mutate(gamename = fct_reorder(gamename, avg)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma) +
facet_wrap(~gamename)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
mutate(gamename = fct_reorder(gamename, -avg)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma) +
facet_wrap(~gamename)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
select(date, gamename, avg, peak)
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
select(date, gamename, avg, peak) %>%
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value")
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
select(date, gamename, avg, peak) %>%
mutate(gamename = fct_reorder(gamename, -avg)) %>%
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value") %>%
ggplot(aes(date, value, color = avg_peak)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma) +
facet_wrap(~gamename)
summary(games$date)
games %>%
count(date)
games %>%
count(date, sort = TRUE)
games %>%
count(date, gamename, sort = TRUE)
games %>%
count(date, sort = TRUE)
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) %>%
geom_line()
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line()
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line(size = 1.5)
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line() +
ggtitle("Number of unique games played by date")
games %>%
count(date) #, sort = TRUE) %>%
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line() +
ggtitle("Number of unique games played by date")
games <- tt$games %>%
#filter(!year %in% c(2012, 2021)) %>%
mutate(avg_peak_perc = parse_number(avg_peak_perc) / 100,
date = mdy(paste0(month, "01", year)),
gamename = str_to_title(gamename))
glimpse(games)
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line()
p1 +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
mutate(gamename = fct_reorder(gamename, avg)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
games %>%
group_by(gamename) %>%
filter(avg == max(avg)) %>%
ungroup() %>%
top_n(9, avg) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
mutate(gamename = fct_reorder(gamename, -avg)) %>%
ggplot(aes(date, avg, color = gamename)) +
geom_line() +
scale_y_log10(labels = comma) +
facet_wrap(~gamename) + #, scales = "free") +
theme(legend.position = "none")
games %>%
count(date, sort = TRUE)
games %>%
count(date, sort = TRUE) %>%
ggplot(aes(date, n)) +
geom_line() +
ggtitle("Number of unique games played by date")
games %>%
group_by(gamename) %>%
summarize(n = n(),
avg = max(avg),
peak = max(peak)) %>%
filter(n == 104) %>%
top_n(9, wt = peak) %>%
select(gamename) %>%
inner_join(games, by = "gamename") %>%
select(date, gamename, avg, peak) %>%
mutate(gamename = fct_reorder(gamename, -avg)) %>%
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value") %>%
ggplot(aes(date, value, color = avg_peak)) +
geom_line(show.legend = FALSE) +
scale_y_log10(labels = comma) +
facet_wrap(~gamename)
games %>%
filter(str_detect(gamename, "Minecraft"))
games %>%
filter(str_detect(gamename, "Minecraft")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Among")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Mario")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Minecraft")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Roblo")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Rob")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "blo")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "inecra")) %>%
distinct(gamename)
games %>%
filter(str_detect(gamename, "Minecraft")) %>%
ggplot(aes(date, avg)) +
geom_line()
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value") %>%
ggplot(aes(date, value, color = avg_peak)) +
geom_line()
games %>%
filter(str_detect(gamename, "Minecraft")) %>%
select(date, gamename, avg, peak) %>%
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value") %>%
ggplot(aes(date, value, color = avg_peak)) +
geom_line()
games %>%
filter(str_detect(gamename, "Minecraft"))
games %>%
filter(str_detect(gamename, "Minecraft")) %>%
select(date, gamename, avg, peak) %>%
pivot_longer(cols = c(3:4), names_to = "avg_peak", values_to = "value") %>%
ggplot(aes(date, value, color = avg_peak)) +
geom_line()
library(tidytext)
games %>%
group_by(gamename) %>%
filter(avg_peak_perc = max(avg_peak_perc))
games %>%
group_by(gamename) %>%
filter(avg_peak_perc == max(avg_peak_perc))
