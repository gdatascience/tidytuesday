1 - pbinom(0.8, 6000, 1/6)
1 - pbinom(1-0.8, 6000, 1/6)
1 - pbinom(998, 6000, 1/6)
(1 - pbinom(998, 6000, 1/6)) * 0.8
((1 - pbinom(998, 6000, 1/6)) * 0.8) / 0.2
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(tidytuesdayR)
theme_set(theme_light())
tt <- tt_load("2021-02-23")
tt
tt %>%
map(glimpse)
employed <- tt$employed
View(employed)
employeed %>% count(race_gender)
employe]d %>% count(race_gender)
employed %>% count(race_gender)
earn <- tt$earn
View(earn)
earn %>% count(sex)
earn %>% count(race)
earn %>% count(age)
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender = "TOTAL", "Total", "Black")) %>%
View()
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender == "TOTAL", "Total", "Black")) %>%
View()
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender == "TOTAL", "Total", "Black")) %>%
View()
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender == "TOTAL", "Total", "Black")) %>%
count(industry)
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender == "TOTAL", "Total", "Black")) %>%
count(industry) %>%
View()
employed %>%
filter(race_gender %in% c("TOTAL", "Black or African American")) %>%
mutate(race = ifelse(race_gender == "TOTAL", "Total", "Black")) %>%
count(industry, industry_total) %>%
View()
earn %>%
filter(sex == "Both Sexes") %>%
View()
earn %>%
filter(sex == "Both Sexes") %>%
count(race)
earn %>%
filter(sex == "Both Sexes",
race %ifn% c("Black or African American", "White")) %>%
count(ethnic_origin)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White")) %>%
count(ethnic_origin)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White")) %>%
count(age)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
count(age)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
count(year, quarter, sort = TRUE)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
View()
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", race, "Black"))
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "white", race, "black")) %>%
pivot_wider(id_cols = c(year, quarter),
names_from = race,
values_from = median_weekly_earn) %>%
```
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "white", race, "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn) %>%
```
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "white", race, "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", "white", "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn)
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", "white", "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn) %>%
mutate(year_qtr = qtr + (year * 100),
pct_earn = black/white) %>%
ggplot(aes(year_qtr, pct_earn)) +
geom_line()
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", "white", "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn) %>%
mutate(year_qtr = quarter + (year * 100),
pct_earn = black/white) %>%
ggplot(aes(year_qtr, pct_earn)) +
geom_line()
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", "white", "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn) %>%
mutate(year_qtr = quarter + (year * 10),
pct_earn = black/white) %>%
ggplot(aes(year_qtr, pct_earn)) +
geom_line()
earn %>%
filter(sex == "Both Sexes",
race %in% c("Black or African American", "White"),
age == "25 to 54 years") %>%
mutate(race = ifelse(race == "White", "white", "black")) %>%
pivot_wider(id_cols = c("year", "quarter"),
names_from = race,
values_from = median_weekly_earn) %>%
mutate(year_qtr = quarter + (year * 10),
pct_earn = black/white) %>%
ggplot(aes(year_qtr, pct_earn)) +
geom_point()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(tidytuesdayR)
theme_set(theme_light())
# Chunk 2: Load
tt <- tt_load("2021-02-23")
# Chunk 3: Readme
tt
# Chunk 4: Glimpse
tt %>%
map(glimpse)
# Chunk 5: Wrangle
earn <- tt$earn
# Chunk 6: Visualize
p1 <- earn %>%
filter(sex == "Both Sexes",
#race %in% c("White", "Black or African American"),
ethnic_origin == "All Origins",
age == "25 to 54 years") %>%
mutate(race = case_when(
race == "White" ~ "white",
race == "Asian" ~ "asian",
race == "All Races" ~ "total",
TRUE ~ "black")) %>%
pivot_wider(id_cols = c(year, quarter),
names_from = race,
values_from = median_weekly_earn) %>%
mutate(black = black/total,
white = white/total,
asian = asian/total,
year_quarter = year+quarter/4-.125) %>%
select(year_quarter, white, black, asian) %>%
pivot_longer(cols = c(white, black, asian),
names_to = "race",
values_to = "pct_total") %>%
ggplot(aes(year_quarter, pct_total, color = race)) +
geom_point(alpha = 0.25) +
geom_smooth(se = FALSE, size = 1.5) +
scale_y_continuous(labels = percent, limits = c(0,1.5))  +
scale_color_manual(values = c("#F46036", "#004FFF", "#1B998B"))
p1
library(ggtext)
p2 <- p1 +
theme(plot.title = element_markdown(lineheight = 1.1),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks = element_blank(),
legend.position = "none") +
labs(x = "",
y = "% of median earnings vs. all races",
title = "**Earnings By Race Compared To All Races**<br>
<span style='font-size:11pt'>Increasing for <span style='color:#F46036;'>**Asians**</span> while flat for <span style='color:#1B998B;'>**Whites**</span> & <span style='color:#004FFF;'>**Blacks**</span></span>",
caption = "Source: US Bureau of Labor Statistics  |  Analysis: Tony Galvan (@GDataScience1)")
p2
# Chunk 7
# This will save your most recent plot
ggsave(
filename = "2021_02_23_tidy_tuesday.png",
device = "png")
View(earn)
setwd("~/GitHub/tidytuesday/2021")
tidytuesdayR::use_tidytemplate()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
library(scales)
theme_set(theme_light())
tt <- tt_load("2021-03-02")
tt
superbowl <- tt$youtube
View(superbowl)
superbowl %>%
count(brand, sort = TRUE)
superbowl %>% filter(brand == "Bud Light") %>% View()
superbowl %>% count(year, brand, sort  = TRUE)
superbowl %>%
group_by(year) %>%
across(.cols = c(funny, danger), .fns = sum)
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny))
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex))
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(id_cols = year, names_to = "attribute", values_to = "count")
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(id_cols = "year", names_to = "attribute", values_to = "count")
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(cols = c("funny":"use_sex"), names_to = "attribute", values_to = "count")
ggplot(aes(year, count, color = attribute)) +
geom_line()
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(cols = c("funny":"use_sex"), names_to = "attribute", values_to = "count") %>%
ggplot(aes(year, count, color = attribute)) +
geom_line()
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(cols = c("funny":"use_sex"), names_to = "attribute", values_to = "count") %>%
ggplot(aes(year, count, color = attribute)) +
geom_point() +
geom_smooth()
superbowl %>%
group_by(year) %>%
summarize(funny = sum(funny),
show_product_quickly = sum(show_product_quickly),
patriotic = sum(patriotic),
celebrity = sum(celebrity),
danger = sum(danger),
animals = sum(animals),
use_sex = sum(use_sex)) %>%
pivot_longer(cols = c("funny":"use_sex"), names_to = "attribute", values_to = "count") %>%
ggplot(aes(year, count, color = attribute)) +
geom_point(alpha = 0.25) +
geom_smooth(se = FALSE)
